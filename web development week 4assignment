<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Responsive Flex & Grid Layout</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>

    <header class="header">
        <h1>Flexbox & Grid Layouts</h1>
        <p>A Responsive design.</p>
    </header>

    <main class="container">
        <section class="flex-container">
            <h2>Flexbox Section üì¶</h2>
            <div class="flex-item item-1">Item 1</div>
            <div class="flex-item item-2">Item 2</div>
            <div class="flex-item item-3">Item 3</div>
        </section>

        <section class="grid-container">
            <h2>Grid Section üó∫Ô∏è</h2>
            <div class="grid-item grid-item-1">Grid Item 1</div>
            <div class="grid-item grid-item-2">Grid Item 2</div>
            <div class="grid-item grid-item-3">Grid Item 3</div>
            <div class="grid-item grid-item-4">Grid Item 4</div>
            <div class="grid-item grid-item-5">Grid Item 5</div>
            <div class="grid-item grid-item-6">Grid Item 6</div>
        </section>
    </main>

    <footer class="footer">
        <p>&copy; 2025 Responsive Layout</p>
    </footer>

</body>
</html>

Global Styles
    ---------------------
*/
:root {
    --primary-color: hwb(133 29% 11%);
    --secondary-color: #6a20af;
    --tertiary-color: #f5a623;
    --dark-bg: #1f5d6e;
    --light-bg: #ee1919;
    --text-color: #333333;
    --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
    line-height: 1.6;
    background-color: var(--light-bg);
    color: var(--text-color);
    padding: 20px;
}

h1, h2 {
    color: var(--primary-color);
    margin-bottom: 10px;
}

.header, .footer {
    background-color: var(--dark-bg);
    color: var(--light-bg);
    text-align: center;
    padding: 20px;
    border-radius: 8px;
    margin-bottom: 20px;
}

.footer {
    margin-top: 20px;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
}

/*
    ---------------------
    Flexbox Section
    ---------------------
*/
.flex-container {
    display: flex;
    flex-wrap: wrap; /* Allows items to wrap to the next line on smaller screens */
    gap: 20px;
    background-color: #f0f4f8;
    padding: 20px;
    border-radius: 8px;
    box-shadow: var(--shadow);
    margin-bottom: 30px;
}

.flex-item {
    background-color: var(--secondary-color);
    padding: 40px 20px;
    text-align: center;
    font-weight: bold;
    color: var(--text-color);
    border-radius: 6px;
    flex: 1 1 300px; /* Flex-grow, flex-shrink, flex-basis */
    /* flex-basis: 300px ensures a minimum width before wrapping */
}

/*
    ---------------------
    Grid Section
    ---------------------
*/
.grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* Default: 3 equal columns */
    gap: 20px;
    background-color: #e6f4f1;
    padding: 20px;
    border-radius: 8px;
    box-shadow: var(--shadow);
}

.grid-item {
    background-color: var(--tertiary-color);
    padding: 40px 20px;
    text-align: center;
    font-weight: bold;
    color: var(--text-color);
    border-radius: 6px;
}

/* Specific Grid Item Layouts */
.grid-item-1 {
    grid-column: 1 / 3; /* Spans from column line 1 to 3 on desktop */
}

.grid-item-4 {
    grid-row: span 2; /* Spans 2 rows on desktop */
}

/*
    ---------------------
    Media Queries
    ---------------------
*/

/* Tablet Layout (768px and up) */
@media (max-width: 1024px) {
    .grid-container {
        grid-template-columns: repeat(2, 1fr); /* 2 columns for tablets */
    }

    .grid-item-1 {
        grid-column: auto; /* Reset column span for tablet layout */
    }

    .grid-item-4 {
        grid-row: auto; /* Reset row span for tablet layout */
    }
}

/* Mobile Layout (less than 768px) */
@media (max-width: 767px) {
    .container {
        padding: 10px;
    }
    
    .flex-container {
        flex-direction: column; /* Stacks flex items vertically on mobile */
    }

    .grid-container {
        grid-template-columns: 1fr; /* Single column for mobile */
    }
}
